{
  "hash": "2cd57ea2d710c4af2187d1faf43ea0b9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Fits and characterizes final model for 26-week outcome\"\nauthor: \"Gaylen Fronk\"\ndate: \"2024-05-27\"\noutput: \n  html_document:\n    toc: true \n    toc_depth: 4\nparams:\n  study: \"match\"\n  version: \"v5\"\n  cv: \"kfold\"\n  y_col_name: \"pp_hybrid_wk26_outcome\" \nformat:\n  html:\n    embed-resources: true\neditor_options: \n  chunk_output_type: console\n---\n\n\n### Set Up Environment\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nstudy <- params$study\nversion <- params$version\ncv <- params$cv\ny_col_name <- params$y_col_name\n```\n:::\n\n\nPackages for script\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\nlibrary(tidymodels)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching packages ────────────────────────────────────── tidymodels 1.2.0 ──\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n✔ broom        1.0.5      ✔ recipes      1.0.10\n✔ dials        1.2.1      ✔ rsample      1.2.1 \n✔ dplyr        1.1.4      ✔ tibble       3.2.1 \n✔ ggplot2      3.5.1      ✔ tidyr        1.3.1 \n✔ infer        1.0.7      ✔ tune         1.2.1 \n✔ modeldata    1.3.0      ✔ workflows    1.1.4 \n✔ parsnip      1.2.1      ✔ workflowsets 1.1.0 \n✔ purrr        1.0.2      ✔ yardstick    1.3.1 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ purrr::discard() masks scales::discard()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks stats::lag()\n✖ recipes::step()  masks stats::step()\n• Dig deeper into tidy modeling with R at https://www.tmwr.org\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ readr     2.1.5\n✔ lubridate 1.9.3     ✔ stringr   1.5.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ readr::col_factor() masks scales::col_factor()\n✖ purrr::discard()    masks scales::discard()\n✖ dplyr::filter()     masks stats::filter()\n✖ stringr::fixed()    masks recipes::fixed()\n✖ dplyr::lag()        masks stats::lag()\n✖ readr::spec()       masks yardstick::spec()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\nlibrary(Matrix)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'Matrix'\n\nThe following objects are masked from 'package:tidyr':\n\n    expand, pack, unpack\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\nlibrary(probably)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'probably'\n\nThe following objects are masked from 'package:base':\n\n    as.factor, as.ordered\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nhere() starts at C:/Users/gfronk/Documents/GitHub/study_match\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\ndevtools::source_url(\"https://github.com/jjcurtin/lab_support/blob/main/fun_eda.R?raw=true\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nℹ SHA-1 hash of file is \"c045eee2655a18dc85e715b78182f176327358a7\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\ndevtools::source_url(\"https://github.com/jjcurtin/lab_support/blob/main/chtc/static_files/fun_chtc.R?raw=true\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nℹ SHA-1 hash of file is \"b58b9e0adc05e89609ee8bc6f20c39375b262fe6\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\ntheme_set(theme_classic()) \n```\n:::\n\n\nHandle conflicts\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\noptions(conflicts.policy = \"depends.ok\")\n```\n:::\n\n\nAbsolute paths\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nswitch (Sys.info()[['sysname']],\n        # PC paths\n        Windows = {\n          path_input <- stringr::str_c(\"P:/studydata/match/chtc/\", \n                                       y_col_name)\n          path_models <- stringr::str_c(\"P:/studydata/match/models/\", \n                                        y_col_name)},\n        \n        # IOS paths\n        Darwin = {\n          path_input <- stringr::str_c(\"/Volumes/private/studydata/match/chtc/\", \n                                       y_col_name)\n          path_models <- stringr::str_c(\"/Volumes/private/studydata/match/models/\", \n                                        y_col_name)},\n        \n        # Linux paths\n        Linux = {\n          path_input <- stringr::str_c(\"~/mnt/private/studydata/match/chtc/\", \n                                       y_col_name)\n          path_models <- stringr::str_c(\"~/mnt/private/studydata/match/models/\", \n                                        y_col_name)}\n)\n```\n:::\n\n\nChunk Defaults\n\n\n::: {.cell .hidden}\n\n```{.r .cell-code .hidden}\n#| include: false\n\nknitr::opts_chunk$set(attr.output='style=\"max-height: 500px;\"')\n\noptions(tibble.width = Inf)\noptions(tibble.print_max = Inf)\n```\n:::\n\n\n### Read in best configuration\n\nSelected in 1_metrics_inner (k-fold CV)\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nbest_config <- read_csv(file.path(path_models, \n                                  str_c(\"best_config_none_\", version, \".csv\")),\n                        show_col_types = FALSE)\n\nglimpse(best_config)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```{style=\"max-height: 500px;\"}\nRows: 1\nColumns: 14\n$ n_jobs       <dbl> 10\n$ algorithm    <chr> \"glmnet\"\n$ feature_set  <chr> \"scale_ordinal\"\n$ hp1          <dbl> 0.3\n$ hp2          <dbl> 0.05645159\n$ hp3          <lgl> NA\n$ resample     <chr> \"none\"\n$ accuracy     <dbl> 0.766055\n$ bal_accuracy <dbl> 0.5\n$ roc_auc      <dbl> 0.6727607\n$ sens         <dbl> 0\n$ spec         <dbl> 1\n$ ppv          <lgl> NA\n$ npv          <dbl> 0.7685185\n```\n\n\n:::\n:::\n\n\n### Fit best model in full dataset\n\n**NOTE**: This model will only be used for 1) examining parameter estimates, and 2) ultimate dissemination.\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nbatch_names <- list.dirs(path_input, full.names = FALSE, recursive = FALSE) \n\nbatch_name <- batch_names[str_detect(batch_names, \"train\") & \n                            str_detect(batch_names, cv) &\n                            str_detect(batch_names, version) &\n                            str_detect(batch_names, best_config$algorithm)] \n\npath_batch <- file.path(path_input, batch_name)\nsource(file.path(path_batch, \"input\", \"training_controls.R\"))\n\nd <- read_csv(file.path(path_batch, \"input\", \"data_trn.csv\"), \n              show_col_types = FALSE) \n\nd_outcomes <- d |> \n  select(subid, ends_with(\"outcome\") & contains(\"hybrid\"))\n\nd <- format_data(d) \n\nrec <- build_recipe(d = d, config = best_config)\n\nrec_prepped <- rec |> \n  prep(training = d, strings_as_factors = FALSE)\n\nfeat_all <- rec_prepped |> \n  bake(new_data = NULL)\n\nmodel_best <- fit_best_model(best_model = best_config, \n                             feat = feat_all, \n                             ml_mode = \"classification\")\n```\n:::\n\n\n### Model coefficients\n\n**NOTE**: Coefficients are naturally inverted (i.e., positive class [abstinence] treated as first [vs. second] class). Here, we multiply coefficients by -1 to align the direction of coefficients with the rest of our analyses. Once flipped (i.e., as they appear below)...\n\nA *positive coefficient* indicates that increases in the feature *increase* the likelihood of abstinence. For example, increases in motivation to quit (\"motive_quit_order\") *increase* the likelihood of abstinence.\n\nA *negative coefficient* indicates that increases in the feature *decrease* the likelihood of smoking. For example, increases in carbon monoxide (\"co\") *decrease* the likelihood of abstinence.\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nmodel_tidy <- tidy(model_best)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoaded glmnet 4.1-8\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nretained_vars <- model_tidy |> \n  mutate(estimate = estimate * -1) |> \n  filter(abs(estimate) > 0) |> \n  select(-penalty) |> \n  arrange(desc(abs(estimate)))\n\nprint_kbl(retained_vars, digits = 4)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div style=\"border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:500px; overflow-x: scroll; width:100%; \"><table class=\"table table-striped table-condensed\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;position: sticky; top:0; background-color: #FFFFFF;\"> term </th>\n   <th style=\"text-align:right;position: sticky; top:0; background-color: #FFFFFF;\"> estimate </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> (Intercept) </td>\n   <td style=\"text-align:right;\"> -1.1708 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> co </td>\n   <td style=\"text-align:right;\"> -0.2263 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> wisdm37_en_goad_scale </td>\n   <td style=\"text-align:right;\"> -0.1130 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> race_ehr_white </td>\n   <td style=\"text-align:right;\"> 0.1125 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> motive_quit_order </td>\n   <td style=\"text-align:right;\"> 0.0788 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> smoke_menthol_yes </td>\n   <td style=\"text-align:right;\"> -0.0784 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> shp_total_scale </td>\n   <td style=\"text-align:right;\"> 0.0760 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> treatment_varenicline_x_marital_status_ehr_divorced </td>\n   <td style=\"text-align:right;\"> -0.0741 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> wsws_neg_aff_scale </td>\n   <td style=\"text-align:right;\"> -0.0662 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> longest_quit_order </td>\n   <td style=\"text-align:right;\"> 0.0624 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> treatment_combo_nrt_x_spouse_smoke_dont_live_with_spouse_or_partner </td>\n   <td style=\"text-align:right;\"> 0.0592 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> tot_quit_attempt </td>\n   <td style=\"text-align:right;\"> 0.0576 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> dsm5_score_scale </td>\n   <td style=\"text-align:right;\"> -0.0538 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> wisdm37_tolerance_scale </td>\n   <td style=\"text-align:right;\"> -0.0499 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> age_1st_cig </td>\n   <td style=\"text-align:right;\"> -0.0476 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> treatment_combo_nrt_x_live_with_smoker_live_alone_or_only_with_partner </td>\n   <td style=\"text-align:right;\"> 0.0457 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> age_ehr </td>\n   <td style=\"text-align:right;\"> 0.0408 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> wsws_crave_scale </td>\n   <td style=\"text-align:right;\"> -0.0386 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> wisdm37_cue_scale </td>\n   <td style=\"text-align:right;\"> -0.0272 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> treatment_varenicline_x_tried_nic_gum_yes </td>\n   <td style=\"text-align:right;\"> 0.0267 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> hdsm_tired </td>\n   <td style=\"text-align:right;\"> -0.0193 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> race_ehr_black_african_american </td>\n   <td style=\"text-align:right;\"> -0.0173 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> treatment_combo_nrt_x_asi3_cognitive_scale </td>\n   <td style=\"text-align:right;\"> 0.0172 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> wisdm37_auto_scale </td>\n   <td style=\"text-align:right;\"> -0.0172 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> tried_nic_gum_no </td>\n   <td style=\"text-align:right;\"> -0.0171 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> tried_nic_gum_yes </td>\n   <td style=\"text-align:right;\"> 0.0169 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> asi3_social_scale </td>\n   <td style=\"text-align:right;\"> 0.0114 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> spouse_smoke_yes </td>\n   <td style=\"text-align:right;\"> -0.0111 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> time_around_smokers_order </td>\n   <td style=\"text-align:right;\"> -0.0111 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> treatment_patch_x_spouse_smoke_yes </td>\n   <td style=\"text-align:right;\"> -0.0082 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> treatment_varenicline_x_close_smoke_friend_yes </td>\n   <td style=\"text-align:right;\"> -0.0078 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> time_around_smokers_weekend_order </td>\n   <td style=\"text-align:right;\"> -0.0055 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> marital_status_ehr_divorced </td>\n   <td style=\"text-align:right;\"> -0.0045 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> treatment_varenicline_x_close_smoke_friend_no </td>\n   <td style=\"text-align:right;\"> 0.0041 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> close_smoke_partner_yes </td>\n   <td style=\"text-align:right;\"> -0.0020 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> close_smoke_partner_no </td>\n   <td style=\"text-align:right;\"> 0.0015 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> treatment_varenicline_x_used_e_cig_tried </td>\n   <td style=\"text-align:right;\"> -0.0009 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> treatment_varenicline_x_close_smoke_partner_yes </td>\n   <td style=\"text-align:right;\"> -0.0001 </td>\n  </tr>\n</tbody>\n</table></div>\n\n`````\n:::\n:::\n\n7.74% of features were retained by the glmnet solution (38 features of a total considered 491 features).\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nretained_vars_tx <- retained_vars |> \n  filter(str_detect(term, \"treatment_\")) |> \n  arrange(desc(abs(estimate))) \n\nprint_kbl(retained_vars_tx, digits = 4)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div style=\"border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:500px; overflow-x: scroll; width:100%; \"><table class=\"table table-striped table-condensed\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;position: sticky; top:0; background-color: #FFFFFF;\"> term </th>\n   <th style=\"text-align:right;position: sticky; top:0; background-color: #FFFFFF;\"> estimate </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> treatment_varenicline_x_marital_status_ehr_divorced </td>\n   <td style=\"text-align:right;\"> -0.0741 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> treatment_combo_nrt_x_spouse_smoke_dont_live_with_spouse_or_partner </td>\n   <td style=\"text-align:right;\"> 0.0592 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> treatment_combo_nrt_x_live_with_smoker_live_alone_or_only_with_partner </td>\n   <td style=\"text-align:right;\"> 0.0457 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> treatment_varenicline_x_tried_nic_gum_yes </td>\n   <td style=\"text-align:right;\"> 0.0267 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> treatment_combo_nrt_x_asi3_cognitive_scale </td>\n   <td style=\"text-align:right;\"> 0.0172 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> treatment_patch_x_spouse_smoke_yes </td>\n   <td style=\"text-align:right;\"> -0.0082 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> treatment_varenicline_x_close_smoke_friend_yes </td>\n   <td style=\"text-align:right;\"> -0.0078 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> treatment_varenicline_x_close_smoke_friend_no </td>\n   <td style=\"text-align:right;\"> 0.0041 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> treatment_varenicline_x_used_e_cig_tried </td>\n   <td style=\"text-align:right;\"> -0.0009 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> treatment_varenicline_x_close_smoke_partner_yes </td>\n   <td style=\"text-align:right;\"> -0.0001 </td>\n  </tr>\n</tbody>\n</table></div>\n\n`````\n:::\n:::\n\n26.32% of the retained features were treatment interaction features (10 treatment features of 38 retained features). Of the 354 available treatment interaction features, 3% were retained.\n\n### Calculate and calibrate probabilities\n\nMake triplicate dataset\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nd_patch <- d |> \n  mutate(treatment = \"patch\") \n\nd_combo <- d |> \n  mutate(treatment = \"combo_nrt\")\n\nd_varen <- d |> \n  mutate(treatment = \"varenicline\")\n\nd_trip <- bind_rows(d_patch, d_combo) |> \n  bind_rows(d_varen) |> \n  mutate(treatment = factor(treatment, \n                            levels = c(\n                              \"patch\",\n                              \"varenicline\",\n                              \"combo_nrt\")))\n```\n:::\n\n\nMake function to: 1) hold out each sub once, 2) fit model with remaining 1085 subs, 3) get 3 raw predictions for held-out sub, 4) get calibrated predictions for held-out sub\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nget_triple_probs <- function(i_sub, best_config, d, d_trip){\n  \n  # hold out single subject\n  d_out <- d_trip |> \n    filter(subid == i_sub)\n  \n  d_in <- d |> \n    filter(subid != i_sub)\n  \n  # prep recipe \n  rec <- build_recipe(d = d_in, config = best_config)\n  rec_prepped <- rec |> \n    prep(training = d_in, strings_as_factors = FALSE)\n  \n  # bake feat_in and feat_out\n  feat_in <- rec_prepped |> \n    bake(new_data = NULL)\n  \n  feat_out <- rec_prepped |> \n    bake(new_data = d_out)\n  \n  # fit model\n  model_best <- fit_best_model(best_config, feat = feat_in,\n                               \"classification\")\n  \n  # raw (uncalibrated) predictions\n  preds_prob <- predict(model_best, feat_out,\n                        type = \"prob\")\n  \n  # fit calibration model\n  set.seed(2468)\n  cal_split <- d_in |> \n    initial_split(prop = 3/4, strata = y)\n  d_cal_in <- training(cal_split) \n  d_cal_out <- testing(cal_split)\n  \n  rec_cal_prepped <- rec |> \n    prep(training = d_cal_in, strings_as_factors = FALSE)\n  \n  feat_cal_in <- rec_cal_prepped |> \n    bake(new_data = NULL) \n  \n  feat_cal_out <- rec_cal_prepped |> \n    bake(new_data = d_cal_out) \n  \n  model_cal <- fit_best_model(best_config, feat = feat_cal_in, \"classification\")\n  \n  # beta calibration\n  beta <- predict(model_cal, feat_cal_out,\n                  type = \"prob\") |>\n    mutate(truth = feat_cal_out$y) |>\n    cal_estimate_beta(truth = truth,\n                      estimate = dplyr::starts_with(\".pred_\"),\n                      smooth = TRUE)\n  preds_prob_beta <- preds_prob |>\n    cal_apply(beta)\n  \n  # iso calibration\n  iso <- predict(model_cal, feat_cal_out,\n                 type = \"prob\") |>\n    mutate(truth = feat_cal_out$y) |>\n    cal_estimate_isotonic(truth = truth,\n                          estimate = dplyr::starts_with(\".pred_\"))\n  preds_prob_iso <- preds_prob |>\n    cal_apply(iso)\n  \n  # logistic calibration\n  logi <- predict(model_cal, feat_cal_out,\n                  type = \"prob\") |>\n    mutate(truth = feat_cal_out$y) |>\n    cal_estimate_logistic(truth = truth,\n                          estimate = dplyr::starts_with(\".pred_\"),\n                          smooth = TRUE)\n  preds_prob_logi <- preds_prob |>\n    cal_apply(logi)\n  \n  # combine raw and calibrated probs\n  probs <- tibble(subid = d_out$subid,\n                  tx = d_out$treatment,\n                  prob_raw = preds_prob[[str_c(\".pred_\", y_level_pos)]],\n                  prob_beta = preds_prob_beta[[str_c(\".pred_\", y_level_pos)]],\n                  prob_iso = preds_prob_iso[[str_c(\".pred_\", y_level_pos)]],\n                  prob_logi = preds_prob_logi[[str_c(\".pred_\", y_level_pos)]]) \n}\n```\n:::\n\n\nMap over participants so that each is held-out once\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nif(file.exists(file.path(path_models, \n                         str_c(\"trip_probs_none_\", version, \".csv\")))) {\n  all_probs <- read_csv(file.path(path_models, \n                                  str_c(\"trip_probs_none_\", version, \".csv\")),\n                        show_col_types = FALSE)\n} else {\n  all_probs <- d$subid |> \n  map(\\(i_sub) get_triple_probs(i_sub, best_config, d, d_trip)) |> \n  list_rbind()\n  \n  all_probs |> \n    write_csv(file.path(path_models, \n                        str_c(\"trip_probs_none_\", version, \".csv\")))\n}\n```\n:::\n\n\n### Make AIM 2 Dataset\n\nPivot probabilities into wide format & select only raw probability (based on calibration validity check below)\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nraw_probs_wide <- all_probs |> \n  select(subid, tx, prob_raw) |> \n  pivot_wider(names_prefix = \"prob_\",\n              names_from = tx,\n              values_from = prob_raw)\n\nglimpse(raw_probs_wide)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```{style=\"max-height: 500px;\"}\nRows: 1,086\nColumns: 4\n$ subid            <dbl> 20010, 20015, 20030, 20049, 20051, 20072, 20077, 2008…\n$ prob_patch       <dbl> 0.1514963, 0.2501455, 0.1857522, 0.2281568, 0.2423632…\n$ prob_combo_nrt   <dbl> 0.1910656, 0.2543865, 0.2146872, 0.2319471, 0.2423632…\n$ prob_varenicline <dbl> 0.1168724, 0.2462586, 0.1483799, 0.2380323, 0.2437960…\n```\n\n\n:::\n:::\n\n\nJoin with d & create new variables\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nset.seed(52592)\nd_aim_2 <- d |> \n  select(subid, tx_rct = treatment, outcome_rct_wk26 = y) |> \n  left_join(raw_probs_wide, by = \"subid\") |> \n  mutate(tx_best = case_when(\n    prob_patch > prob_combo_nrt & prob_patch > prob_varenicline ~ \"patch\",\n    prob_combo_nrt > prob_patch & prob_combo_nrt > prob_varenicline ~ \"combo_nrt\",\n    prob_varenicline > prob_patch & prob_varenicline > prob_combo_nrt ~ \"varenicline\",\n    TRUE ~ NA_character_\n  )) |> \n  mutate(tx_best = if_else(is.na(tx_best), case_when(\n    prob_patch == prob_combo_nrt ~ \"combo_nrt\",\n    prob_patch == prob_varenicline ~ \"varenicline\",\n    prob_combo_nrt == prob_varenicline ~ sample(c(\"combo_nrt\",\n                                                  \"varenicline\"), 1),\n    TRUE ~ NA_character_\n  ), tx_best)) |> \n  mutate(prob_best = case_when(\n    tx_best == \"patch\" ~ prob_patch,\n    tx_best == \"combo_nrt\" ~ prob_combo_nrt,\n    tx_best == \"varenicline\" ~ prob_varenicline,\n    TRUE ~ NA_real_\n  )) |> \n  mutate(tx_best = factor(tx_best, \n                          levels = c(\n                            \"patch\",\n                            \"varenicline\",\n                            \"combo_nrt\"))) |> \n  mutate(tx_match = if_else(tx_best == tx_rct, TRUE, FALSE)) |> \n  left_join(d_outcomes, by = \"subid\") |> \n  select(-pp_hybrid_wk26_outcome, -pp_hybrid_wk1_outcome, -pp_hybrid_yr3_outcome, -pp_hybrid_wk52_outcome) |> # already in there from d\n  rename(outcome_rct_wk12 = pp_hybrid_wk12_outcome,\n         outcome_rct_wk4 = pp_hybrid_wk4_outcome) |> \n  relocate(subid, tx_rct, tx_best, tx_match,\n           prob_best, starts_with(\"outcome\"), starts_with(\"prob\"))\n\nglimpse(d_aim_2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```{style=\"max-height: 500px;\"}\nRows: 1,086\nColumns: 11\n$ subid            <dbl> 20010, 20015, 20030, 20049, 20051, 20072, 20077, 2008…\n$ tx_rct           <fct> patch, combo_nrt, patch, varenicline, patch, combo_nr…\n$ tx_best          <fct> combo_nrt, combo_nrt, combo_nrt, varenicline, varenic…\n$ tx_match         <lgl> FALSE, TRUE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE,…\n$ prob_best        <dbl> 0.1910656, 0.2543865, 0.2146872, 0.2380323, 0.2437960…\n$ outcome_rct_wk26 <fct> smoking, smoking, smoking, abstinent, smoking, smokin…\n$ outcome_rct_wk4  <chr> \"smoking\", \"smoking\", \"smoking\", \"smoking\", \"smoking\"…\n$ outcome_rct_wk12 <chr> \"smoking\", \"smoking\", \"smoking\", \"abstinent\", \"smokin…\n$ prob_patch       <dbl> 0.1514963, 0.2501455, 0.1857522, 0.2281568, 0.2423632…\n$ prob_combo_nrt   <dbl> 0.1910656, 0.2543865, 0.2146872, 0.2319471, 0.2423632…\n$ prob_varenicline <dbl> 0.1168724, 0.2462586, 0.1483799, 0.2380323, 0.2437960…\n```\n\n\n:::\n:::\n\n\nQuick EDA checks\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# confirm logic worked as expected\nhead(d_aim_2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```{style=\"max-height: 500px;\"}\n# A tibble: 6 × 11\n  subid tx_rct      tx_best     tx_match prob_best outcome_rct_wk26\n  <dbl> <fct>       <fct>       <lgl>        <dbl> <fct>           \n1 20010 patch       combo_nrt   FALSE        0.191 smoking         \n2 20015 combo_nrt   combo_nrt   TRUE         0.254 smoking         \n3 20030 patch       combo_nrt   FALSE        0.215 smoking         \n4 20049 varenicline varenicline TRUE         0.238 abstinent       \n5 20051 patch       varenicline FALSE        0.244 smoking         \n6 20072 combo_nrt   varenicline FALSE        0.268 smoking         \n  outcome_rct_wk4 outcome_rct_wk12 prob_patch prob_combo_nrt prob_varenicline\n  <chr>           <chr>                 <dbl>          <dbl>            <dbl>\n1 smoking         smoking               0.151          0.191            0.117\n2 smoking         smoking               0.250          0.254            0.246\n3 smoking         smoking               0.186          0.215            0.148\n4 smoking         abstinent             0.228          0.232            0.238\n5 smoking         smoking               0.242          0.242            0.244\n6 smoking         smoking               0.259          0.267            0.268\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n# check on variability of best tx\nd_aim_2 |> \n  tab(tx_best) # note: no one gets assigned to patch\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```{style=\"max-height: 500px;\"}\n# A tibble: 2 × 3\n  tx_best         n  prop\n  <fct>       <int> <dbl>\n1 varenicline   285 0.262\n2 combo_nrt     801 0.738\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n# check on variability of tx matching\nd_aim_2 |> \n  tab(tx_match)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```{style=\"max-height: 500px;\"}\n# A tibble: 2 × 3\n  tx_match     n  prop\n  <lgl>    <int> <dbl>\n1 FALSE      648 0.597\n2 TRUE       438 0.403\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n# variability of matching within assigned (RCT) tx\nd_aim_2 |> \n  group_by(tx_rct) |> \n  tab(tx_match)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```{style=\"max-height: 500px;\"}\n# A tibble: 5 × 4\n# Groups:   tx_rct [3]\n  tx_rct      tx_match     n  prop\n  <fct>       <lgl>    <int> <dbl>\n1 patch       FALSE      241 1    \n2 varenicline FALSE      307 0.724\n3 varenicline TRUE       117 0.276\n4 combo_nrt   FALSE      100 0.238\n5 combo_nrt   TRUE       321 0.762\n```\n\n\n:::\n:::\n\n\nWrite out\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nd_aim_2 |> \n  write_csv(file.path(path_models, str_c(\"aim_2_\", version, \"_\", \n                                   y_col_name, \".csv\")))\n\n# d_aim_2 |> \n#   write_csv(here(\"/objects\", str_c(\"aim_2_\", version, \"_\", \n#                                    y_col_name, \".csv\")))\n```\n:::\n\n\n### Validity check: Model Calibration\n\nMake wide format for all calibrated probabilities\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nall_probs_wide <- all_probs |> \n  rename_with(~ str_replace(.x, \"prob_\", \"\"), .cols = starts_with(\"prob_\")) |> \n  pivot_wider(\n    names_from = tx,\n    values_from = c(raw, beta, iso, logi),\n    names_glue = \"{.value}_{tx}\"\n  )\n```\n:::\n\n\nSet up validity check data\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nd_valid <- d_aim_2 |> \n  select(subid, tx_rct, outcome_rct_wk26) |> \n  left_join(all_probs_wide, by = \"subid\") |> \n  mutate(beta = case_when(\n    tx_rct == \"patch\" ~ beta_patch,\n    tx_rct == \"combo_nrt\" ~ beta_combo_nrt,\n    tx_rct == \"varenicline\" ~ beta_varenicline,\n    TRUE ~ NA_real_\n  ),\n  raw = case_when(\n    tx_rct == \"patch\" ~ raw_patch,\n    tx_rct == \"combo_nrt\" ~ raw_combo_nrt,\n    tx_rct == \"varenicline\" ~ raw_varenicline,\n    TRUE ~ NA_real_\n  ),\n  isotonic = case_when(\n    tx_rct == \"patch\" ~ iso_patch,\n    tx_rct == \"combo_nrt\" ~ iso_combo_nrt,\n    tx_rct == \"varenicline\" ~ iso_varenicline,\n    TRUE ~ NA_real_\n  ),\n  logistic = case_when(\n    tx_rct == \"patch\" ~ logi_patch,\n    tx_rct == \"combo_nrt\" ~ logi_combo_nrt,\n    tx_rct == \"varenicline\" ~ logi_varenicline,\n    TRUE ~ NA_real_\n  )) |> \n  select(subid, outcome_rct_wk26, beta, raw, isotonic, logistic) \n```\n:::\n\n\n#### Comparison of means\n\nCompare mean abstinence from RCT to predicted probabilities for RCT tx across calibrations\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nd_valid |> \n  mutate(outcome_rct = if_else(outcome_rct_wk26 == \"abstinent\", 1, 0)) |> \n  summarize(mean_rct = mean(outcome_rct),\n            mean_beta = mean(beta),\n            mean_iso = mean(isotonic),\n            mean_logi = mean(logistic),\n            mean_raw = mean(raw))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```{style=\"max-height: 500px;\"}\n# A tibble: 1 × 5\n  mean_rct mean_beta mean_iso mean_logi mean_raw\n     <dbl>     <dbl>    <dbl>     <dbl>    <dbl>\n1    0.247     0.255    0.169     0.255    0.246\n```\n\n\n:::\n:::\n\nRaw probabilities appear to match the outcome best.\n\n#### Plots\n\nPivot data longer for required format\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nd_plot <- d_valid |> \n  pivot_longer(\n    cols = c(beta, raw, isotonic, logistic),\n    names_to = \"method\",\n    values_to = \".pred_abstinent\"\n  )\n```\n:::\n\n\nMake plots by calibration method\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nd_plot |> \n  cal_plot_breaks(truth = outcome_rct_wk26, \n                  estimate = .pred_abstinent,\n                  .by = method)\n```\n\n::: {.cell-output-display}\n![](fit_final_model_26wk_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\nd_plot |> \n  cal_plot_windowed(truth = outcome_rct_wk26, \n                  estimate = .pred_abstinent,\n                  .by = method)\n```\n\n::: {.cell-output-display}\n![](fit_final_model_26wk_files/figure-html/unnamed-chunk-15-2.png){width=672}\n:::\n:::\n\nLogistic and raw probabilities follow the diagonal line for the longest. Both jump off the line around the midpoint, with logistic probabilities jumping up, and raw probabilities jumping in both directions.\n\n#### Brier score\n\nBeta calibration\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nbrier_class_vec(truth = d_valid$outcome_rct_wk26,\n                estimate = d_valid$beta)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```{style=\"max-height: 500px;\"}\n[1] 0.1792077\n```\n\n\n:::\n:::\n\n\nLogistic calibration\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nbrier_class_vec(truth = d_valid$outcome_rct_wk26,\n                estimate = d_valid$logistic)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```{style=\"max-height: 500px;\"}\n[1] 0.1791732\n```\n\n\n:::\n:::\n\n\nIsotonic calibration\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nbrier_class_vec(truth = d_valid$outcome_rct_wk26,\n                estimate = d_valid$isotonic)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```{style=\"max-height: 500px;\"}\n[1] 0.1861293\n```\n\n\n:::\n:::\n\n\nRaw calibration\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nbrier_class_vec(truth = d_valid$outcome_rct_wk26,\n                estimate = d_valid$raw)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```{style=\"max-height: 500px;\"}\n[1] 0.1759518\n```\n\n\n:::\n:::",
    "supporting": [
      "fit_final_model_26wk_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}