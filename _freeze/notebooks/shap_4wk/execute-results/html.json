{
  "hash": "8c496f49584783e5169af43b80edd0a4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"SHAP for 4-Week Model\"\nauthor: \"Gaylen Fronk\"\ndate: \"2024-06-01\"\nnumber-sections: true\noutput: \n  html_document:\n    toc: true \n    toc_depth: 4\nformat:\n  html:\n    embed-resources: true\n    toc: true\n    toc-depth: 4\neditor_options: \n  chunk_output_type: console\n---\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nstudy <- \"match\"\nversion <- \"v5\"\ny_col_name <- \"pp_hybrid_wk4_outcome\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\n# packages for script\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\ntheme_set(theme_classic()) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\n# handle conflicts\noptions(conflicts.policy = \"depends.ok\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# absolute paths\nswitch (Sys.info()[['sysname']],\n        # PC paths\n        Windows = {\n          path_data <- str_c(\"P:/studydata/match/chtc/\", y_col_name)},\n        \n        # IOS paths\n        Darwin = {\n          path_data <- str_c(\"/Volumes/private/studydata/match/chtc/\", y_col_name)},\n        \n        # Linux paths\n        Linux = {\n          path_data <- str_c(\"~/mnt/private/studydata/match/chtc/\", y_col_name)}\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# chunk defaults\n\noptions(tibble.width = Inf)\noptions(tibble.print_max = Inf)\n```\n:::\n\n\n## Read in data\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlocal <- read_csv(file.path(path_data, str_c(\"shap_loocv_\", version), \n                            \"output\", \"batch_results.csv\"),\n                  col_types = \"cddd\")\n\nglimpse(local)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 1,273,830\nColumns: 4\n$ variable_name  <chr> \"age_1st_cig\", \"age_daily_smoker\", \"age_ehr\", \"alc_bing…\n$ variable_value <dbl> 0.18140, -0.56780, 0.57420, 0.70530, 1.41800, -0.02156,…\n$ contribution   <dbl> 0.000000e+00, -9.205713e-05, 0.000000e+00, 0.000000e+00…\n$ subid          <dbl> 51514, 51514, 51514, 51514, 51514, 51514, 51514, 51514,…\n```\n\n\n:::\n:::\n\nThis is already local SHAP values because we have one observation per subid per variable.\n\n## Get global Shapley values\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nglobal <- local |> \n  group_by(variable_name) |> \n  summarize(abs_shap = abs(mean(contribution))) |> \n  arrange(desc(abs_shap))\n\nglimpse(global)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 1,183\nColumns: 2\n$ variable_name <chr> \"treatment_combo_nrt_x_race_ehr_black_african_american\",…\n$ abs_shap      <dbl> 0.0025035357, 0.0020666109, 0.0019589872, 0.0017329089, …\n```\n\n\n:::\n:::\n\n\nDelineate treatment interactions\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nglobal <- global |> \n  mutate(tx_int = if_else(str_detect(variable_name, \"treatment_\"), \"Interaction\", \"Main Effect\"))\n\nlocal <- local |> \n  mutate(tx_int = if_else(str_detect(variable_name, \"treatment_\"), \"Interaction\", \"Main Effect\"))\n```\n:::\n\n\n## Make global figures\n\nOverall\n\n::: {#cell-fig-shap-global .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-shap-global\n\nfig_shap_global <- global |> \n  arrange(desc(abs_shap)) |> \n  slice(1:25) |> \n  arrange(abs_shap) |> \n  mutate(variable_name = str_replace(variable_name, \"treatment_\", \"\")) |> \n  mutate(variable_name = fct_inorder(variable_name)) |> \n  ggplot(mapping = aes(x = variable_name, y = abs_shap, color = tx_int)) +\n  geom_point(size = 2) +\n  geom_segment(aes(x = variable_name, y = abs_shap, xend = variable_name),\n               yend = 0) +\n  labs(\n    x = \"Feature Name\",\n    y = \"Mean |Shapley value|\",\n    color = \"Feature Type\"\n  ) +\n  coord_flip()\n\nfig_shap_global\n```\n\n::: {.cell-output-display}\n![](shap_4wk_files/figure-html/fig-shap-global-1.png){#fig-shap-global width=672}\n:::\n:::\n\n\nGlobal Shapley values among treatment interactions\n\n::: {#cell-fig-shap-global-tx .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-shap-global-tx\n\nfig_shap_global_tx <- global |> \n  filter(tx_int == \"Interaction\") |> \n  arrange(desc(abs_shap)) |> \n  slice(1:25) |> \n  arrange(abs_shap) |> \n  mutate(variable_name = str_replace(variable_name, \"treatment_\", \"\")) |> \n  mutate(variable_name = fct_inorder(variable_name)) |> \n  ggplot(mapping = aes(x = variable_name, y = abs_shap, color = tx_int)) +\n  geom_point(size = 2) +\n  geom_segment(aes(x = variable_name, y = abs_shap, xend = variable_name),\n               yend = 0) +\n  labs(\n    x = \"Feature Name\",\n    y = \"Mean |Shapley value|\"\n  ) +\n  coord_flip() +\n  theme(legend.position = \"none\")\n\nfig_shap_global_tx\n```\n\n::: {.cell-output-display}\n![](shap_4wk_files/figure-html/fig-shap-global-tx-1.png){#fig-shap-global-tx width=672}\n:::\n:::\n\n\n## Make Sina plots (local) \n\nOverall\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# get levels in order from global plot\nlevels_all <- global |>\n  arrange(desc(abs_shap)) |> \n  slice(1:25) |> \n  pull(variable_name)\n\nfig_shap_local_all <- local |>\n  filter(variable_name %in% levels_all) |>\n  mutate(variable_name = factor(variable_name, levels = levels_all)) |>\n  mutate(variable_name = str_replace(variable_name, \"treatment_\", \"\")) |> \n  ggplot(mapping = aes(x = variable_name, y = contribution,\n                       color = tx_int)) +\n  ggforce::geom_sina(method = \"counts\", maxwidth = 0.7, alpha = 0.4) +\n  geom_hline(yintercept = 0) +\n  #scale_y_continuous(limits = c(-2, 5), breaks = seq(-2, 5)) +\n  labs(\n    x = \"\",\n    y = \"Shapley Value\",\n    color = \"Feature Type\"\n  ) +\n  theme(axis.text = element_text(size = 9.5)) +\n  coord_flip()\n\nfig_shap_local_all\n```\n\n::: {.cell-output-display}\n![](shap_4wk_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nLocal Shapley values among treatment interactions\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# get levels in order from global plot\nlevels_tx <- global |>\n  filter(tx_int == \"Interaction\") |> \n  arrange(desc(abs_shap)) |> \n  slice(1:25) |> \n  pull(variable_name)\n\nfig_shap_local_tx <- local |> \n  filter(tx_int == \"Interaction\") |> \n  filter(variable_name %in% levels_tx) |>\n  mutate(variable_name = factor(variable_name, levels = levels_tx)) |>\n  mutate(variable_name = str_replace(variable_name, \"treatment_\", \"\")) |> \n  ggplot(mapping = aes(x = variable_name, y = contribution,\n                       color = tx_int)) +\n  ggforce::geom_sina(method = \"counts\", maxwidth = 0.7, alpha = 0.4) +\n  geom_hline(yintercept = 0) +\n  #scale_y_continuous(limits = c(-2, 5), breaks = seq(-2, 5)) +\n  labs(\n    x = \"\",\n    y = \"Shapley Value\",\n  ) +\n  theme(axis.text = element_text(size = 9.5),\n        legend.position = \"none\") +\n  coord_flip()\n\nfig_shap_local_tx\n```\n\n::: {.cell-output-display}\n![](shap_4wk_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nfrom ema\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#\n# # order features to match global plot\n# shap_levels <- shap_global_all |>\n#   mutate(variable_grp = reorder(variable_grp, mean_value, sum)) |>\n#   pull(variable_grp) |>\n#   levels()\n#\n```\n:::\n\n\n## Combine\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(patchwork)\n\n(fig_shap_global / fig_shap_global_tx) +\n  plot_layout(guides = \"collect\")\n```\n\n::: {.cell-output-display}\n![](shap_4wk_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\nfig_shap_global + fig_shap_local_all + fig_shap_global_tx + fig_shap_local_tx +\n  plot_layout(guides = \"collect\",\n              ncol = 2)\n```\n\n::: {.cell-output-display}\n![](shap_4wk_files/figure-html/unnamed-chunk-9-2.png){width=672}\n:::\n:::\n",
    "supporting": [
      "shap_4wk_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}