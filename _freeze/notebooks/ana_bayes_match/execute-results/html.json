{
  "hash": "9ff89fed8c4d86777c50cadf94887989",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Posterior probabilities across models for MATCH study (version v5)\"\nauthor: \"John Curtin\"\ndate: \"2024-04-23\"\nformat:\n  html:\n    embed-resources: true\nparams:\n  study: \"match\"\n  version: \"v5\"\n  y_col_name: \"pp_hybrid_wk4_outcome\"\n  cv: \"nested\"\noutput: \n  html_document:\n    toc: true \n    toc_depth: 4\neditor_options: \n  chunk_output_type: console\n---\n\n\n### Code Status\n\nIn use with iterative improvement.\n\nUpdating for use with MATCH\n\n### Notes\nCan review online docs for \n\n* [how to use rstanarm](https://cran.r-project.org/web/packages/rstanarm/vignettes/rstanarm.html)\n* [priors](https://cran.r-project.org/web/packages/rstanarm/vignettes/priors.html)\n* [warnings](https://mc-stan.org/misc/warnings.html)\n* [tutorial on rstanarm and shinystan](https://www.tqmp.org/RegularArticles/vol14-2/p099/p099.pdf)\n* [R Bloggers on perf_mod](https://www.r-bloggers.com/2019/12/tidyposteriors-bayesian-approach-to-model-comparison/)\n\n### Set Up Environment\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nstudy <- params$study\nversion <- params$version\ncv <- params$cv\n```\n:::\n\n\nPackages for script\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(tidyposterior)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(tidymodels)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──\n✔ broom        1.0.5     ✔ rsample      1.2.0\n✔ dials        1.2.0     ✔ tune         1.1.2\n✔ infer        1.0.6     ✔ workflows    1.1.3\n✔ modeldata    1.3.0     ✔ workflowsets 1.0.1\n✔ parsnip      1.1.1     ✔ yardstick    1.3.0\n✔ recipes      1.0.9     \n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Search for functions across packages at https://www.tidymodels.org/find/\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ntheme_set(theme_classic()) \n```\n:::\n\n\nAbsolute paths\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nswitch (Sys.info()[['sysname']],\n        # PC paths\n        Windows = {\n          path_models <- \"P:/studydata/match/models/\"},\n        \n        # IOS paths\n        Darwin = {\n          path_models <- \"/Volumes/private/studydata/match/models/\"},\n        \n        # Linux paths\n        Linux = {\n          path_models <- \"~/mnt/private/studydata/match/models/\"}\n)\n```\n:::\n\n\n\nChunk Defaults\n\n::: {.cell .hidden}\n\n```{.r .cell-code .hidden}\nknitr::opts_chunk$set(attr.output='style=\"max-height: 500px;\"')\n\noptions(tibble.width = Inf)\noptions(tibble.print_max = Inf)\n```\n:::\n\n\n\nSource training controls \n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# EDA\ndevtools::source_url(\"https://github.com/jjcurtin/lab_support/blob/main/fun_eda.R?raw=true\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nℹ SHA-1 hash of file is \"c045eee2655a18dc85e715b78182f176327358a7\"\n```\n\n\n:::\n:::\n\n\n\n### Read in preds and metrics for best model\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nauc_wk4 <- read_rds(file.path(path_models, \"pp_hybrid_wk4_outcome\",\n                              str_c(\"outer_metrics_\", \n                                    version, \"_\", cv, \".rds\"))) |> \n  arrange(outer_split_num) |> \n  mutate(repeat_num = rep(str_c(\"repeat\", 1:3), each = 10),\n         fold_num = rep(str_c(\"fold\", 1:10), 3)) |>   # assumes 3x10 fold\n  select(repeat_num, fold_num, roc_auc) |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```{style=\"max-height: 500px;\"}\nRows: 30\nColumns: 3\n$ repeat_num <chr> \"repeat1\", \"repeat1\", \"repeat1\", \"repeat1\", \"repeat1\", \"rep…\n$ fold_num   <chr> \"fold1\", \"fold2\", \"fold3\", \"fold4\", \"fold5\", \"fold6\", \"fold…\n$ roc_auc    <dbl> 0.5890269, 0.6716134, 0.6794598, 0.6187231, 0.7406656, 0.68…\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nauc_wk26 <- read_rds(file.path(path_models, \"pp_hybrid_wk26_outcome\",\n                               str_c(\"outer_metrics_\", \n                                     version, \"_\", cv, \".rds\"))) |> \n  arrange(outer_split_num) |> \n  mutate(repeat_num = rep(str_c(\"repeat\", 1:3), each = 10),\n         fold_num = rep(str_c(\"fold\", 1:10), 3)) |>   # assumes 3x10 fold\n  select(repeat_num, fold_num, roc_auc) |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```{style=\"max-height: 500px;\"}\nRows: 30\nColumns: 3\n$ repeat_num <chr> \"repeat1\", \"repeat1\", \"repeat1\", \"repeat1\", \"repeat1\", \"rep…\n$ fold_num   <chr> \"fold1\", \"fold2\", \"fold3\", \"fold4\", \"fold5\", \"fold6\", \"fold…\n$ roc_auc    <dbl> 0.5594937, 0.6443820, 0.6266667, 0.5333642, 0.6827004, 0.61…\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nauc <- auc_wk4 |> \n  rename(week_4 = roc_auc) |> \n  mutate(week_26 = auc_wk26$roc_auc) |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```{style=\"max-height: 500px;\"}\nRows: 30\nColumns: 4\n$ repeat_num <chr> \"repeat1\", \"repeat1\", \"repeat1\", \"repeat1\", \"repeat1\", \"rep…\n$ fold_num   <chr> \"fold1\", \"fold2\", \"fold3\", \"fold4\", \"fold5\", \"fold6\", \"fold…\n$ week_4     <dbl> 0.5890269, 0.6716134, 0.6794598, 0.6187231, 0.7406656, 0.68…\n$ week_26    <dbl> 0.5594937, 0.6443820, 0.6266667, 0.5333642, 0.6827004, 0.61…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nauc_wk4 %>% \n  ggplot() + \n  geom_histogram(aes(x = roc_auc), bins = 10)\n```\n\n::: {.cell-output-display}\n![](ana_bayes_match_files/figure-html/auc_plots-1.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\nauc_wk26 %>% \n  ggplot() + \n  geom_histogram(aes(x = roc_auc), bins = 10)\n```\n\n::: {.cell-output-display}\n![](ana_bayes_match_files/figure-html/auc_plots-2.png){width=672}\n:::\n:::\n\n\n### All models\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# from ?perf_mod()\n# Repeated CV (id = repeat, id2 = fold within repeat)\n\nset.seed(101)\npp <- auc |> \n  rename(id = repeat_num,\n         id2 = fold_num) |> \n  perf_mod(formula = statistic ~ model + (1 | id2/id), \n           # prior_intercept = rstanarm::student_t(autoscale = TRUE),\n           # prior = rstanarm::student_t(autoscale = TRUE),\n           transform = tidyposterior::logit_trans,  # for skewed & bounded AUC\n           iter = 2000, chains = 4,  \n           adapt_delta = .99,\n           # cores = 4, seed = 12345,\n           family = gaussian, \n  )  \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```{style=\"max-height: 500px;\"}\n\nSAMPLING FOR MODEL 'continuous' NOW (CHAIN 1).\nChain 1: \nChain 1: Gradient evaluation took 6.3e-05 seconds\nChain 1: 1000 transitions using 10 leapfrog steps per transition would take 0.63 seconds.\nChain 1: Adjust your expectations accordingly!\nChain 1: \nChain 1: \nChain 1: Iteration:    1 / 2000 [  0%]  (Warmup)\nChain 1: Iteration:  200 / 2000 [ 10%]  (Warmup)\nChain 1: Iteration:  400 / 2000 [ 20%]  (Warmup)\nChain 1: Iteration:  600 / 2000 [ 30%]  (Warmup)\nChain 1: Iteration:  800 / 2000 [ 40%]  (Warmup)\nChain 1: Iteration: 1000 / 2000 [ 50%]  (Warmup)\nChain 1: Iteration: 1001 / 2000 [ 50%]  (Sampling)\nChain 1: Iteration: 1200 / 2000 [ 60%]  (Sampling)\nChain 1: Iteration: 1400 / 2000 [ 70%]  (Sampling)\nChain 1: Iteration: 1600 / 2000 [ 80%]  (Sampling)\nChain 1: Iteration: 1800 / 2000 [ 90%]  (Sampling)\nChain 1: Iteration: 2000 / 2000 [100%]  (Sampling)\nChain 1: \nChain 1:  Elapsed Time: 1.376 seconds (Warm-up)\nChain 1:                0.717 seconds (Sampling)\nChain 1:                2.093 seconds (Total)\nChain 1: \n\nSAMPLING FOR MODEL 'continuous' NOW (CHAIN 2).\nChain 2: \nChain 2: Gradient evaluation took 2.3e-05 seconds\nChain 2: 1000 transitions using 10 leapfrog steps per transition would take 0.23 seconds.\nChain 2: Adjust your expectations accordingly!\nChain 2: \nChain 2: \nChain 2: Iteration:    1 / 2000 [  0%]  (Warmup)\nChain 2: Iteration:  200 / 2000 [ 10%]  (Warmup)\nChain 2: Iteration:  400 / 2000 [ 20%]  (Warmup)\nChain 2: Iteration:  600 / 2000 [ 30%]  (Warmup)\nChain 2: Iteration:  800 / 2000 [ 40%]  (Warmup)\nChain 2: Iteration: 1000 / 2000 [ 50%]  (Warmup)\nChain 2: Iteration: 1001 / 2000 [ 50%]  (Sampling)\nChain 2: Iteration: 1200 / 2000 [ 60%]  (Sampling)\nChain 2: Iteration: 1400 / 2000 [ 70%]  (Sampling)\nChain 2: Iteration: 1600 / 2000 [ 80%]  (Sampling)\nChain 2: Iteration: 1800 / 2000 [ 90%]  (Sampling)\nChain 2: Iteration: 2000 / 2000 [100%]  (Sampling)\nChain 2: \nChain 2:  Elapsed Time: 1.021 seconds (Warm-up)\nChain 2:                0.813 seconds (Sampling)\nChain 2:                1.834 seconds (Total)\nChain 2: \n\nSAMPLING FOR MODEL 'continuous' NOW (CHAIN 3).\nChain 3: \nChain 3: Gradient evaluation took 2.1e-05 seconds\nChain 3: 1000 transitions using 10 leapfrog steps per transition would take 0.21 seconds.\nChain 3: Adjust your expectations accordingly!\nChain 3: \nChain 3: \nChain 3: Iteration:    1 / 2000 [  0%]  (Warmup)\nChain 3: Iteration:  200 / 2000 [ 10%]  (Warmup)\nChain 3: Iteration:  400 / 2000 [ 20%]  (Warmup)\nChain 3: Iteration:  600 / 2000 [ 30%]  (Warmup)\nChain 3: Iteration:  800 / 2000 [ 40%]  (Warmup)\nChain 3: Iteration: 1000 / 2000 [ 50%]  (Warmup)\nChain 3: Iteration: 1001 / 2000 [ 50%]  (Sampling)\nChain 3: Iteration: 1200 / 2000 [ 60%]  (Sampling)\nChain 3: Iteration: 1400 / 2000 [ 70%]  (Sampling)\nChain 3: Iteration: 1600 / 2000 [ 80%]  (Sampling)\nChain 3: Iteration: 1800 / 2000 [ 90%]  (Sampling)\nChain 3: Iteration: 2000 / 2000 [100%]  (Sampling)\nChain 3: \nChain 3:  Elapsed Time: 1.267 seconds (Warm-up)\nChain 3:                0.392 seconds (Sampling)\nChain 3:                1.659 seconds (Total)\nChain 3: \n\nSAMPLING FOR MODEL 'continuous' NOW (CHAIN 4).\nChain 4: \nChain 4: Gradient evaluation took 2.4e-05 seconds\nChain 4: 1000 transitions using 10 leapfrog steps per transition would take 0.24 seconds.\nChain 4: Adjust your expectations accordingly!\nChain 4: \nChain 4: \nChain 4: Iteration:    1 / 2000 [  0%]  (Warmup)\nChain 4: Iteration:  200 / 2000 [ 10%]  (Warmup)\nChain 4: Iteration:  400 / 2000 [ 20%]  (Warmup)\nChain 4: Iteration:  600 / 2000 [ 30%]  (Warmup)\nChain 4: Iteration:  800 / 2000 [ 40%]  (Warmup)\nChain 4: Iteration: 1000 / 2000 [ 50%]  (Warmup)\nChain 4: Iteration: 1001 / 2000 [ 50%]  (Sampling)\nChain 4: Iteration: 1200 / 2000 [ 60%]  (Sampling)\nChain 4: Iteration: 1400 / 2000 [ 70%]  (Sampling)\nChain 4: Iteration: 1600 / 2000 [ 80%]  (Sampling)\nChain 4: Iteration: 1800 / 2000 [ 90%]  (Sampling)\nChain 4: Iteration: 2000 / 2000 [100%]  (Sampling)\nChain 4: \nChain 4:  Elapsed Time: 0.962 seconds (Warm-up)\nChain 4:                0.395 seconds (Sampling)\nChain 4:                1.357 seconds (Total)\nChain 4: \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nrstanarm::prior_summary(pp$stan)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```{style=\"max-height: 500px;\"}\nPriors for model 'pp$stan' \n------\nIntercept (after predictors centered)\n  Specified prior:\n    ~ normal(location = 0.64, scale = 2.5)\n  Adjusted prior:\n    ~ normal(location = 0.64, scale = 0.66)\n\nCoefficients\n  Specified prior:\n    ~ normal(location = 0, scale = 2.5)\n  Adjusted prior:\n    ~ normal(location = 0, scale = 1.3)\n\nAuxiliary (sigma)\n  Specified prior:\n    ~ exponential(rate = 1)\n  Adjusted prior:\n    ~ exponential(rate = 3.8)\n\nCovariance\n ~ decov(reg. = 1, conc. = 1, shape = 1, scale = 1)\n------\nSee help('prior_summary.stanreg') for more details\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nsummary(pp$stan)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```{style=\"max-height: 500px;\"}\n\nModel Info:\n function:     stan_glmer\n family:       gaussian [identity]\n formula:      statistic ~ model + (1 | id2/id)\n algorithm:    sampling\n sample:       4000 (posterior sample size)\n priors:       see help('prior_summary')\n observations: 60\n groups:       id:id2 (30), id2 (10)\n\nEstimates:\n                                        mean   sd   10%   50%   90%\n(Intercept)                            0.6    0.0  0.5   0.6   0.6 \nmodelweek_4                            0.2    0.0  0.1   0.2   0.2 \nb[(Intercept) id:id2:repeat1:fold1]   -0.2    0.1 -0.4  -0.2  -0.1 \nb[(Intercept) id:id2:repeat1:fold10]  -0.2    0.1 -0.3  -0.2  -0.1 \nb[(Intercept) id:id2:repeat1:fold2]    0.0    0.1 -0.1   0.0   0.2 \nb[(Intercept) id:id2:repeat1:fold3]    0.0    0.1 -0.1   0.0   0.1 \nb[(Intercept) id:id2:repeat1:fold4]   -0.2    0.1 -0.4  -0.2  -0.1 \nb[(Intercept) id:id2:repeat1:fold5]    0.2    0.1  0.1   0.2   0.3 \nb[(Intercept) id:id2:repeat1:fold6]    0.0    0.1 -0.2   0.0   0.1 \nb[(Intercept) id:id2:repeat1:fold7]    0.2    0.1  0.0   0.2   0.3 \nb[(Intercept) id:id2:repeat1:fold8]    0.3    0.1  0.1   0.3   0.4 \nb[(Intercept) id:id2:repeat1:fold9]   -0.1    0.1 -0.2  -0.1   0.1 \nb[(Intercept) id:id2:repeat2:fold1]    0.0    0.1 -0.1   0.0   0.1 \nb[(Intercept) id:id2:repeat2:fold10]   0.2    0.1  0.1   0.2   0.4 \nb[(Intercept) id:id2:repeat2:fold2]   -0.1    0.1 -0.2  -0.1   0.1 \nb[(Intercept) id:id2:repeat2:fold3]   -0.3    0.1 -0.4  -0.3  -0.2 \nb[(Intercept) id:id2:repeat2:fold4]    0.1    0.1 -0.1   0.1   0.2 \nb[(Intercept) id:id2:repeat2:fold5]    0.0    0.1 -0.1   0.0   0.1 \nb[(Intercept) id:id2:repeat2:fold6]    0.3    0.1  0.2   0.3   0.5 \nb[(Intercept) id:id2:repeat2:fold7]   -0.1    0.1 -0.2  -0.1   0.0 \nb[(Intercept) id:id2:repeat2:fold8]    0.0    0.1 -0.2   0.0   0.1 \nb[(Intercept) id:id2:repeat2:fold9]    0.0    0.1 -0.2   0.0   0.1 \nb[(Intercept) id:id2:repeat3:fold1]   -0.1    0.1 -0.2  -0.1   0.0 \nb[(Intercept) id:id2:repeat3:fold10]   0.0    0.1 -0.2   0.0   0.1 \nb[(Intercept) id:id2:repeat3:fold2]   -0.1    0.1 -0.2  -0.1   0.1 \nb[(Intercept) id:id2:repeat3:fold3]    0.3    0.1  0.2   0.3   0.5 \nb[(Intercept) id:id2:repeat3:fold4]    0.1    0.1 -0.1   0.0   0.2 \nb[(Intercept) id:id2:repeat3:fold5]    0.0    0.1 -0.1   0.0   0.1 \nb[(Intercept) id:id2:repeat3:fold6]    0.0    0.1 -0.2   0.0   0.1 \nb[(Intercept) id:id2:repeat3:fold7]    0.0    0.1 -0.1   0.0   0.1 \nb[(Intercept) id:id2:repeat3:fold8]   -0.3    0.1 -0.4  -0.3  -0.1 \nb[(Intercept) id:id2:repeat3:fold9]    0.2    0.1  0.1   0.2   0.3 \nb[(Intercept) id2:fold1]               0.0    0.1 -0.1   0.0   0.0 \nb[(Intercept) id2:fold10]              0.0    0.0 -0.1   0.0   0.1 \nb[(Intercept) id2:fold2]               0.0    0.0 -0.1   0.0   0.0 \nb[(Intercept) id2:fold3]               0.0    0.0 -0.1   0.0   0.0 \nb[(Intercept) id2:fold4]               0.0    0.0 -0.1   0.0   0.0 \nb[(Intercept) id2:fold5]               0.0    0.0  0.0   0.0   0.1 \nb[(Intercept) id2:fold6]               0.0    0.1  0.0   0.0   0.1 \nb[(Intercept) id2:fold7]               0.0    0.0  0.0   0.0   0.1 \nb[(Intercept) id2:fold8]               0.0    0.0 -0.1   0.0   0.0 \nb[(Intercept) id2:fold9]               0.0    0.0  0.0   0.0   0.1 \nsigma                                  0.2    0.0  0.1   0.2   0.2 \nSigma[id:id2:(Intercept),(Intercept)]  0.0    0.0  0.0   0.0   0.1 \nSigma[id2:(Intercept),(Intercept)]     0.0    0.0  0.0   0.0   0.0 \n\nFit Diagnostics:\n           mean   sd   10%   50%   90%\nmean_PPD 0.6    0.0  0.6   0.6   0.7  \n\nThe mean_ppd is the sample average posterior predictive distribution of the outcome variable (for details see help('summary.stanreg')).\n\nMCMC diagnostics\n                                      mcse Rhat n_eff\n(Intercept)                           0.0  1.0  1944 \nmodelweek_4                           0.0  1.0  5882 \nb[(Intercept) id:id2:repeat1:fold1]   0.0  1.0  2850 \nb[(Intercept) id:id2:repeat1:fold10]  0.0  1.0  3470 \nb[(Intercept) id:id2:repeat1:fold2]   0.0  1.0  4409 \nb[(Intercept) id:id2:repeat1:fold3]   0.0  1.0  4392 \nb[(Intercept) id:id2:repeat1:fold4]   0.0  1.0  3012 \nb[(Intercept) id:id2:repeat1:fold5]   0.0  1.0  3220 \nb[(Intercept) id:id2:repeat1:fold6]   0.0  1.0  4015 \nb[(Intercept) id:id2:repeat1:fold7]   0.0  1.0  3494 \nb[(Intercept) id:id2:repeat1:fold8]   0.0  1.0  2817 \nb[(Intercept) id:id2:repeat1:fold9]   0.0  1.0  4362 \nb[(Intercept) id:id2:repeat2:fold1]   0.0  1.0  3466 \nb[(Intercept) id:id2:repeat2:fold10]  0.0  1.0  3237 \nb[(Intercept) id:id2:repeat2:fold2]   0.0  1.0  4321 \nb[(Intercept) id:id2:repeat2:fold3]   0.0  1.0  3205 \nb[(Intercept) id:id2:repeat2:fold4]   0.0  1.0  3884 \nb[(Intercept) id:id2:repeat2:fold5]   0.0  1.0  4161 \nb[(Intercept) id:id2:repeat2:fold6]   0.0  1.0  2288 \nb[(Intercept) id:id2:repeat2:fold7]   0.0  1.0  5294 \nb[(Intercept) id:id2:repeat2:fold8]   0.0  1.0  4906 \nb[(Intercept) id:id2:repeat2:fold9]   0.0  1.0  4715 \nb[(Intercept) id:id2:repeat3:fold1]   0.0  1.0  2980 \nb[(Intercept) id:id2:repeat3:fold10]  0.0  1.0  4201 \nb[(Intercept) id:id2:repeat3:fold2]   0.0  1.0  3860 \nb[(Intercept) id:id2:repeat3:fold3]   0.0  1.0  2228 \nb[(Intercept) id:id2:repeat3:fold4]   0.0  1.0  4766 \nb[(Intercept) id:id2:repeat3:fold5]   0.0  1.0  3789 \nb[(Intercept) id:id2:repeat3:fold6]   0.0  1.0  3895 \nb[(Intercept) id:id2:repeat3:fold7]   0.0  1.0  4243 \nb[(Intercept) id:id2:repeat3:fold8]   0.0  1.0  2890 \nb[(Intercept) id:id2:repeat3:fold9]   0.0  1.0  2829 \nb[(Intercept) id2:fold1]              0.0  1.0  2179 \nb[(Intercept) id2:fold10]             0.0  1.0  3731 \nb[(Intercept) id2:fold2]              0.0  1.0  3343 \nb[(Intercept) id2:fold3]              0.0  1.0  3279 \nb[(Intercept) id2:fold4]              0.0  1.0  2953 \nb[(Intercept) id2:fold5]              0.0  1.0  3083 \nb[(Intercept) id2:fold6]              0.0  1.0  2411 \nb[(Intercept) id2:fold7]              0.0  1.0  4584 \nb[(Intercept) id2:fold8]              0.0  1.0  3902 \nb[(Intercept) id2:fold9]              0.0  1.0  3744 \nsigma                                 0.0  1.0  1342 \nSigma[id:id2:(Intercept),(Intercept)] 0.0  1.0  1226 \nSigma[id2:(Intercept),(Intercept)]    0.0  1.0  1560 \nmean_PPD                              0.0  1.0  4078 \nlog-posterior                         0.3  1.0   700 \n\nFor each parameter, mcse is Monte Carlo standard error, n_eff is a crude measure of effective sample size, and Rhat is the potential scale reduction factor on split chains (at convergence Rhat=1).\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# shinystan::launch_shinystan(pp$stan)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npp %>%  write_rds(file.path(path_models, \n                            str_c(\"posteriors_\", version, \"_nested.rds\")))\n```\n:::\n\n\n### Model posterier CIs\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npp_tidy <- pp %>% \n  tidy(seed = 123)\n\nq = c(.025, .5, .975)\npp_tidy |> \n  group_by(model) |> \n  summarize(median = quantile(posterior, probs = q[2]),\n            lower = quantile(posterior, probs = q[1]), \n            upper = quantile(posterior, probs = q[3])) |> \n  mutate(model = factor(model, levels = c(\"week_26\", \"week_4\"),\n                        labels = c(\"Week 26\", \"Week 4\")),\n         y = 1000) |> \n  arrange(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```{style=\"max-height: 500px;\"}\n# A tibble: 2 × 5\n  model   median lower upper     y\n  <fct>    <dbl> <dbl> <dbl> <dbl>\n1 Week 26  0.634 0.612 0.657  1000\n2 Week 4   0.676 0.654 0.697  1000\n```\n\n\n:::\n:::\n\n\n### Model contrasts\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npp_contrasts <- contrast_models(pp, \n                                list(\"week_4\"), \n                                list(\"week_26\"))\nsummary(pp_contrasts, size = .01, prob = 0.95)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```{style=\"max-height: 500px;\"}\n# A tibble: 1 × 9\n  contrast          probability   mean  lower  upper  size pract_neg pract_equiv\n  <chr>                   <dbl>  <dbl>  <dbl>  <dbl> <dbl>     <dbl>       <dbl>\n1 week_4 vs week_26           1 0.0412 0.0237 0.0591  0.01         0     0.00075\n  pract_pos\n      <dbl>\n1     0.999\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\npp_contrasts |> autoplot(size = .01)\n```\n\n::: {.cell-output-display}\n![](ana_bayes_match_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nHere are contrasts against 0 rather than using ROPE\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npp_contrasts |> \n  mutate(wk4_gt_wk26 = if_else(difference > 0, 1, 0)) |>\n  pull(wk4_gt_wk26) |> \n  mean()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```{style=\"max-height: 500px;\"}\n[1] 1\n```\n\n\n:::\n:::\n\n\n### Plots\n\nModel posteriors\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nci <- pp_tidy |> \n  summary() |> \n  mutate(model = factor(model, levels = c(\"week_4\", \"week_26\")),\n         y = 1000) \n\nci_week4 <- ci |> \n  filter(model == \"week_4\")\n```\n:::\n\n::: {#cell-fig-posteriors .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-posteriors\nfig_posteriors <- pp_tidy |> \n  mutate(model = factor(model, levels = c(\"week_4\", \"week_26\"))) |> \n  ggplot() + \n  geom_histogram(aes(x = posterior, fill = model), color = \"black\", alpha = .4, \n                 bins = 30) +\n  geom_segment(mapping = aes(y = y + 100, yend = y - 100, x = mean, xend = mean,\n                             color = model),\n               data = ci) +\n  geom_segment(mapping = aes(y = y, yend = y, x = lower, xend = upper, color = model),\n               data = ci) +\n  facet_wrap(~model, ncol = 1) +\n  scale_y_continuous(\"Posterior Probability\", breaks = c(0, 500, 1000)) +\n  # ylab(\"Posterior Probability Density\") +\n  xlab(\"Area Under ROC Curve\")\n\nfig_posteriors\n```\n\n::: {.cell-output-display}\n![](ana_bayes_match_files/figure-html/fig-posteriors-1.png){#fig-posteriors width=672}\n:::\n:::\n\n::: {#cell-fig-week4 .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-week4\n\npp_tidy |> \n  mutate(model = factor(model, levels = c(\"week_4\", \"week_26\"))) |> \n  filter(model == \"week_4\") |> \n  ggplot() + \n  geom_histogram(aes(x = posterior, fill = model), color = \"black\", alpha = .4, \n                 bins = 30) +\n  geom_segment(mapping = aes(y = y + 100, yend = y - 100, x = mean, xend = mean,\n                             color = model),\n               data = ci_week4) +\n  geom_segment(mapping = aes(y = y, yend = y, x = lower, xend = upper, color = model),\n               data = ci_week4) +\n  scale_y_continuous(\"Posterior Probability\", breaks = c(0, 500, 1000)) +\n  # ylab(\"Posterior Probability Density\") +\n  xlab(\"Area Under ROC Curve\") +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](ana_bayes_match_files/figure-html/fig-week4-1.png){#fig-week4 width=672}\n:::\n:::\n\n\n\nmodel contrast posteriors\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nci_con <- pp |>\n  contrast_models(list(\"week_4\"), \n                  list(\"week_26\")) |> \n  summary(size = .01) |> \n  mutate(contrast = factor(contrast, \n                           levels = c(\"week_4 vs week_26\"),\n                           labels = c(\"week 4 vs. week 26\")),\n         y = 700)\n```\n:::\n\n::: {#cell-fig-contrasts .cell}\n\n```{.r .cell-code .hidden}\nfig_contrasts <- pp |> \n  tidy(seed = 123) |>   \n  group_by(model) |> \n  mutate(sample = row_number()) |> \n  ungroup() |> \n  pivot_wider(names_from = model, values_from = posterior) |> \n  mutate(posterior = week_4 - week_26) |> \n  ggplot() +\n  geom_histogram(aes(x = posterior), \n                 color = \"black\", alpha = .4, bins = 30) +\n  geom_vline(xintercept = -.01, color = \"yellow\", linetype = \"dashed\", linewidth = 1) +\n  geom_vline(xintercept = .01, color = \"yellow\", linetype = \"dashed\", linewidth = 1) +\n  geom_segment(mapping = aes(y = y+50, yend = y-50, x = mean, xend = mean), \n               data = ci_con) +\n  geom_segment(mapping = aes(y = y, yend = y, x = lower, xend = upper), \n               data = ci_con) +\n  ylab(\"Posterior Probability\") +\n  xlab(\"Model Contrast for auROC (Week 4 vs. Week 26)\")\n\nfig_contrasts\n```\n\n::: {.cell-output-display}\n![](ana_bayes_match_files/figure-html/fig-contrasts-1.png){#fig-contrasts width=672}\n:::\n:::\n",
    "supporting": [
      "ana_bayes_match_files\\figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}