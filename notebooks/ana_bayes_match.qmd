---
title: "Posterior probabilities across models for MATCH study"
author: "John Curtin"
date: "`r lubridate::today()`"
number-sections: true
output: 
  html_document:
    toc: true 
    toc_depth: 4
format:
  html:
    embed-resources: true
    toc: true
    toc-depth: 4
editor_options: 
  chunk_output_type: console
---

### Code Status

In use with iterative improvement.

Updating for use with MATCH

### Notes
Can review online docs for 

* [how to use rstanarm](https://cran.r-project.org/web/packages/rstanarm/vignettes/rstanarm.html)
* [priors](https://cran.r-project.org/web/packages/rstanarm/vignettes/priors.html)
* [warnings](https://mc-stan.org/misc/warnings.html)
* [tutorial on rstanarm and shinystan](https://www.tqmp.org/RegularArticles/vol14-2/p099/p099.pdf)
* [R Bloggers on perf_mod](https://www.r-bloggers.com/2019/12/tidyposteriors-bayesian-approach-to-model-comparison/)

### Set Up Environment

```{r}
study <- "match"
version <- "v6"
cv <- "nested"
```

Packages for script
```{r packages_script, message=FALSE, warning=FALSE}
library(tidyposterior)
library(tidyverse)
library(tidymodels)

theme_set(theme_classic()) 
```

Absolute paths
```{r, absolute paths}
switch (Sys.info()[['sysname']],
        # PC paths
        Windows = {
          path_models <- "P:/studydata/match/models/"},
        
        # IOS paths
        Darwin = {
          path_models <- "/Volumes/private/studydata/match/models/"},
        
        # Linux paths
        Linux = {
          path_models <- "~/mnt/private/studydata/match/models/"}
)
```


Chunk Defaults
```{r defaults, include=FALSE}
knitr::opts_chunk$set(attr.output='style="max-height: 500px;"')

options(tibble.width = Inf)
options(tibble.print_max = Inf)
```


Source training controls 
```{r source}
# EDA
devtools::source_url("https://github.com/jjcurtin/lab_support/blob/main/fun_eda.R?raw=true")
```


### Read in preds and metrics for best model

```{r load_preds_metrics}

auc_wk4 <- read_rds(file.path(path_models, "pp_hybrid_wk4_outcome",
                              str_c("outer_metrics_", 
                                    version, "_", cv, ".rds"))) |> 
  arrange(outer_split_num) |> 
  mutate(repeat_num = rep(str_c("repeat", 1:3), each = 10),
         fold_num = rep(str_c("fold", 1:10), 3)) |>   # assumes 3x10 fold
  select(repeat_num, fold_num, roc_auc) |> 
  glimpse()

auc_wk12 <- read_rds(file.path(path_models, "pp_hybrid_wk12_outcome",
                               str_c("outer_metrics_", 
                                     version, "_", cv, ".rds"))) |> 
  arrange(outer_split_num) |> 
  mutate(repeat_num = rep(str_c("repeat", 1:3), each = 10),
         fold_num = rep(str_c("fold", 1:10), 3)) |>   # assumes 3x10 fold
  select(repeat_num, fold_num, roc_auc) |> 
  glimpse()

auc_wk26 <- read_rds(file.path(path_models, "pp_hybrid_wk26_outcome",
                               str_c("outer_metrics_", 
                                     version, "_", cv, ".rds"))) |> 
  arrange(outer_split_num) |> 
  mutate(repeat_num = rep(str_c("repeat", 1:3), each = 10),
         fold_num = rep(str_c("fold", 1:10), 3)) |>   # assumes 3x10 fold
  select(repeat_num, fold_num, roc_auc) |> 
  glimpse()

auc <- auc_wk4 |> 
  rename(week_4 = roc_auc) |> 
  mutate(week_12 = auc_wk12$roc_auc,
         week_26 = auc_wk26$roc_auc) |> 
  glimpse()

```

```{r auc_plots}
auc_wk4 %>% 
  ggplot() + 
  geom_histogram(aes(x = roc_auc), bins = 10)

auc_wk12 %>% 
  ggplot() + 
  geom_histogram(aes(x = roc_auc), bins = 10)

auc_wk26 %>% 
  ggplot() + 
  geom_histogram(aes(x = roc_auc), bins = 10)
```

### All models

```{r bayes}
# from ?perf_mod()
# Repeated CV (id = repeat, id2 = fold within repeat)

set.seed(101)
pp <- auc |> 
  rename(id = repeat_num,
         id2 = fold_num) |> 
  perf_mod(formula = statistic ~ model + (1 | id2/id), 
           # prior_intercept = rstanarm::student_t(autoscale = TRUE),
           # prior = rstanarm::student_t(autoscale = TRUE),
           transform = tidyposterior::logit_trans,  # for skewed & bounded AUC
           iter = 2000, chains = 4,  
           adapt_delta = .999,
           # cores = 4, seed = 12345,
           family = gaussian, 
  )  
```

```{r}
rstanarm::prior_summary(pp$stan)
```

```{r}
summary(pp$stan)
```

```{r}
# shinystan::launch_shinystan(pp$stan)
```

```{r}
pp %>%  write_rds(file.path(path_models, 
                            str_c("posteriors_", version, "_nested.rds")))
```

### Model posterier CIs

```{r}
pp_tidy <- pp %>% 
  tidy(seed = 123)

q = c(.025, .5, .975)
pp_tidy |> 
  group_by(model) |> 
  summarize(median = quantile(posterior, probs = q[2]),
            lower = quantile(posterior, probs = q[1]), 
            upper = quantile(posterior, probs = q[3])) |> 
  mutate(model = factor(model, levels = c("week_26", "week_12", "week_4"),
                        labels = c("Week 26", "Week 12", "Week 4")),
         y = 1000) |> 
  arrange(model)

```

### Model contrasts

```{r}
pp_contrasts <- contrast_models(pp, 
                                list("week_4", "week_4", "week_12"), 
                                list("week_12", "week_26", "week_26"))
summary(pp_contrasts, size = .01, prob = 0.95)
pp_contrasts |> autoplot(size = .01)
```

Medians
```{r}
pp_contrasts |> 
  filter(contrast == "week_4 vs. week_12") |> 
  pull(difference) |> 
  median()

pp_contrasts |> 
  filter(contrast == "week_4 vs. week_26") |> 
  pull(difference) |> 
  median()

pp_contrasts |> 
  filter(contrast == "week_12 vs. week_26") |> 
  pull(difference) |> 
  median()
```


Here are contrasts against 0 rather than using ROPE
```{r}

pp_contrasts |> 
  filter(contrast == "week_4 vs. week_12") |> 
  mutate(wk4_gt_wk12 = if_else(difference > 0, 1, 0)) |>
  pull(wk4_gt_wk12) |> 
  mean()

pp_contrasts |> 
  filter(contrast == "week_4 vs. week_26") |> 
  mutate(wk4_gt_wk26 = if_else(difference > 0, 1, 0)) |>
  pull(wk4_gt_wk26) |> 
  mean()

pp_contrasts |> 
  filter(contrast == "week_12 vs. week_26") |> 
  mutate(wk12_gt_wk26 = if_else(difference > 0, 1, 0)) |>
  pull(wk12_gt_wk26) |> 
  mean()


```

### Plots

Model posteriors
```{r}
ci <- pp_tidy |> 
  summary() |> 
  mutate(model = factor(model, levels = c("week_4", "week_12", "week_26"),
                        labels = c("Week 4", "Week 12", "Week 26")),
         y = 1000) 
```

```{r}
#| label: fig-posteriors
#| fig-cap: "Supplemental Figure 2: Posterior Probability Distributions around model auROCs"
#| fig-cap-location: top


fig_posteriors <- pp_tidy |> 
  mutate(model = factor(model, levels = c("week_4", "week_12", "week_26"),
                        labels = c("Week 4", "Week 12", "Week 26"))) |> 
  ggplot() + 
  geom_histogram(aes(x = posterior, fill = model), color = "black", alpha = .4, 
                 bins = 30) +
  geom_segment(mapping = aes(y = y + 100, yend = y - 100, x = mean, xend = mean,
                             color = model),
               data = ci) +
  geom_segment(mapping = aes(y = y, yend = y, 
                             x = lower, xend = upper, color = model),
               data = ci) +
  facet_wrap(~model, ncol = 1) +
  scale_y_continuous("Posterior Probability", breaks = c(0, 500, 1000)) +
  labs(
    x = "Area Under ROC Curve (auROC)",
    fill = "Model",
    color = "Model"
  )

fig_posteriors
```

```{r}
#| label: fig-week4

ci_week4 <- ci |> 
  filter(model == "Week 4")

pp_tidy |> 
  mutate(model = factor(model, levels = c("week_4", "week_12", "week_26"),
                        labels = c("Week 4", "Week 12", "Week 26"))) |> 
  filter(model == "Week 4") |> 
  ggplot() + 
  geom_histogram(aes(x = posterior, fill = model), color = "black", alpha = .4, 
                 bins = 30) +
  geom_segment(mapping = aes(y = y, yend = y - 200, x = mean, xend = mean,
                             color = model),
               data = ci_week4) +
  geom_segment(mapping = aes(y = y - 100, yend = y - 100, 
                             x = lower, xend = upper, color = model),
               data = ci_week4) +
  scale_y_continuous("Posterior Probability") +
  labs(
    x = "Area Under ROC Curve (auROC)",
  ) +
  theme(legend.position = "none")
```

model contrast posteriors

```{r model_contrast_posteriors}
ci_con <- pp |>
  contrast_models(list("week_4", "week_4", "week_12"), 
                  list("week_12", "week_26", "week_26")) |> 
  summary(size = .01) |> 
  mutate(contrast = factor(contrast, 
                           levels = c("week_4 vs week_12",
                                      "week_4 vs week_26",
                                      "week_12 vs week_26"),
                           labels = c("Week 4 vs. Week 12",
                                      "Week 4 vs. Week 26",
                                      "Week 12 vs. Week 26")),
         y = 800)
```

```{r}
#| label: fig-contrasts
#| fig-cap: "Supplemental Figure 3: Posterior Probability Distributions around Model Contrasts"
#| fig-cap-location: top

fig_contrasts <- pp |> 
  tidy(seed = 123) |>   
  group_by(model) |> 
  mutate(sample = row_number()) |> 
  ungroup() |> 
  pivot_wider(names_from = model, values_from = posterior) |> 
  mutate(wk4_vs_wk26 = week_4 - week_26,
         wk4_vs_wk12 = week_4 - week_12,
         wk12_vs_wk26 = week_12 - week_26) |> 
  pivot_longer(cols = c(wk4_vs_wk12, wk4_vs_wk26, wk12_vs_wk26),
               names_to = "contrast",
               values_to = "posterior") |> 
  mutate(contrast = factor(contrast,
                           levels = c("wk4_vs_wk12", "wk4_vs_wk26", "wk12_vs_wk26"),
                           labels = c("Week 4 vs. Week 12",
                                      "Week 4 vs. Week 26",
                                      "Week 12 vs. Week 26"))) |> 
  ggplot() +
  geom_histogram(aes(x = posterior, fill = contrast), 
                 color = "black", alpha = .4, bins = 30) +
  geom_vline(xintercept = 0, color = "yellow", 
             linetype = "dashed", linewidth = 1) +
  geom_segment(mapping = aes(y = y+50, yend = y-50, 
                             x = mean, xend = mean, color = contrast), 
               data = ci_con) +
  geom_segment(mapping = aes(y = y, yend = y, 
                             x = lower, xend = upper, color = contrast), 
               data = ci_con) +
  facet_wrap(~contrast, ncol = 1) +
  labs(
    x = "Model Contrast for auROC",
    y = "Posterior Probability",
    fill = "Contrast",
    color = "Contrast"
  )

fig_contrasts
```






