{
  "hash": "c2cd5a6038a2e7aab16f8ec7d898d715",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"SHAP for 4-Week Model\"\nauthor: \"Gaylen Fronk\"\ndate: \"2024-05-13\"\nnumber-sections: true\noutput: \n  html_document:\n    toc: true \n    toc_depth: 4\nparams:\n  study: \"match\"\n  version: \"v5\"\n  y_col_name: \"pp_hybrid_wk4_outcome\"\nformat:\n  html:\n    embed-resources: true\n    toc: true\n    toc-depth: 4\neditor_options: \n  chunk_output_type: console\n---\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nstudy <- params$study\nversion <- params$version\ny_col_name <- params$y_col_name\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\n# packages for script\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\ntheme_set(theme_classic()) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\n# handle conflicts\noptions(conflicts.policy = \"depends.ok\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# absolute paths\nswitch (Sys.info()[['sysname']],\n        # PC paths\n        Windows = {\n          path_data <- str_c(\"P:/studydata/match/chtc/\", y_col_name)},\n        \n        # IOS paths\n        Darwin = {\n          path_data <- str_c(\"/Volumes/private/studydata/match/chtc/\", y_col_name)},\n        \n        # Linux paths\n        Linux = {\n          path_data <- str_c(\"~/mnt/private/studydata/match/chtc/\", y_col_name)}\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# chunk defaults\n\noptions(tibble.width = Inf)\noptions(tibble.print_max = Inf)\n```\n:::\n\n\n## Read in data\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nd <- read_csv(file.path(path_data, str_c(\"shap_\", version), \n                        \"output\", \"batch_results.csv\"),\n              col_types = \"cddd\")\n\nglimpse(d)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 1,270,612\nColumns: 4\n$ variable_name  <chr> \"age_1st_cig\", \"age_daily_smoker\", \"age_ehr\", \"alc_bing…\n$ variable_value <dbl> 0.46270, 0.54570, 0.76030, 0.70470, 1.06600, 0.62950, -…\n$ contribution   <dbl> -0.0043340563, 0.0000000000, 0.0000000000, 0.0000000000…\n$ subid          <dbl> 40299, 40299, 40299, 40299, 40299, 40299, 40299, 40299,…\n```\n\n\n:::\n:::\n\nThis is already local SHAP values because we have one observation per subid per variable.\n\n## Get global Shapley values\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nglobal <- d |> \n  group_by(variable_name) |> \n  summarize(mean_shap = mean(contribution),\n            abs_shap = abs(mean(contribution))) |> \n  arrange(desc(abs_shap))\n```\n:::\n\n\nTreatment interactions only\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nglobal_tx <- global |> \n  filter(str_detect(variable_name, \"treatment_\"))\n```\n:::\n\n\n## Make global figures\n\nOverall\n\n::: {#cell-fig-shap-global .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-shap-global\n\nglobal |> \n  arrange(desc(abs_shap)) |> \n  slice(1:25) |> \n  arrange(abs_shap) |> \n  mutate(variable_name = fct_inorder(variable_name)) |> \n  ggplot(mapping = aes(x = variable_name, y = abs_shap)) +\n  geom_point(size = 2, color = \"red\") +\n  geom_segment(aes(x = variable_name, y = abs_shap, xend = variable_name),\n               yend = 0, colour = \"grey50\") +\n  labs(\n    x = \"Variable Name\",\n    y = \"Mean |Shapley value|\"\n  ) +\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](shap_4wk_files/figure-html/fig-shap-global-1.png){#fig-shap-global width=672}\n:::\n:::\n\n\nGlobal Shapley values among treatment interactions\n\n::: {#cell-fig-shap-global-tx .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-shap-global-tx\n\nglobal_tx |> \n  arrange(desc(abs_shap)) |> \n  slice(1:25) |> \n  arrange(abs_shap) |> \n  mutate(variable_name = str_replace(variable_name, \"treatment_\", \"\")) |> \n  mutate(variable_name = fct_inorder(variable_name)) |> \n  ggplot(mapping = aes(x = variable_name, y = abs_shap)) +\n  geom_point(size = 2, color = \"red\") +\n  geom_segment(aes(x = variable_name, y = abs_shap, xend = variable_name),\n               yend = 0, colour = \"grey50\") +\n  labs(\n    x = \"Variable Name\",\n    y = \"Mean |Shapley value|\"\n  ) +\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](shap_4wk_files/figure-html/fig-shap-global-tx-1.png){#fig-shap-global-tx width=672}\n:::\n:::\n",
    "supporting": [
      "shap_4wk_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}