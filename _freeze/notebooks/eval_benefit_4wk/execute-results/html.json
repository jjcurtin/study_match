{
  "hash": "09ef5eff2706f12697993b8cc7ca8e77",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Preregistration: Evaluation of Clinical Benefit\"\nauthor: \"Gaylen Fronk\"\ndate: \"2024-05-13\"\nnumber-sections: true\noutput: \n  html_document:\n    toc: true \n    toc_depth: 4\nparams:\n  study: \"match\"\n  version: \"v5\"\n  y_col_name: \"pp_hybrid_wk4_outcome\"\nformat:\n  html:\n    embed-resources: true\n    toc: true\n    toc-depth: 4\neditor_options: \n  chunk_output_type: console\n---\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nstudy <- params$study\nversion <- params$version\ny_col_name <- params$y_col_name\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\n# packages for script\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\nlibrary(blme)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: lme4\nLoading required package: Matrix\n\nAttaching package: 'Matrix'\n\nThe following objects are masked from 'package:tidyr':\n\n    expand, pack, unpack\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\nlibrary(lme4)\n\ndevtools::source_url(\"https://github.com/jjcurtin/lab_support/blob/main/fun_eda.R?raw=true\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nℹ SHA-1 hash of file is \"c045eee2655a18dc85e715b78182f176327358a7\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\ndevtools::source_url(\"https://github.com/jjcurtin/lab_support/blob/main/chtc/static_files/fun_chtc.R?raw=true\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nℹ SHA-1 hash of file is \"b58b9e0adc05e89609ee8bc6f20c39375b262fe6\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\ntheme_set(theme_classic()) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\n# handle conflicts\noptions(conflicts.policy = \"depends.ok\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# absolute paths\nswitch (Sys.info()[['sysname']],\n        # PC paths\n        Windows = {\n          path_models <- str_c(\"P:/studydata/match/models/\", y_col_name)},\n        \n        # IOS paths\n        Darwin = {\n          path_models <- str_c(\"/Volumes/private/studydata/match/models/\", y_col_name)},\n        \n        # Linux paths\n        Linux = {\n          path_models <- str_c(\"~/mnt/private/studydata/match/models/\", y_col_name)}\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# chunk defaults\n\noptions(tibble.width = Inf)\noptions(tibble.print_max = Inf)\n```\n:::\n\n\nRead in aim 2 dataset\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nd <- read_csv(file.path(path_models, \n                        str_c(\"aim_2_\", version, \"_\", y_col_name, \".csv\")),\n              show_col_types = FALSE) |> \n  mutate(outcome_rct_wk4_num = if_else(outcome_rct_wk4 == \"abstinent\", 1, 0),\n         outcome_rct_wk12_num = if_else(outcome_rct_wk12 == \"abstinent\", 1, 0),\n         outcome_rct_wk26_num = if_else(outcome_rct_wk26 == \"abstinent\", 1, 0),\n         tx_worst = case_when(\n           prob_patch < prob_combo_nrt & prob_patch < prob_varenicline ~ \"patch\",\n           prob_combo_nrt < prob_patch & prob_combo_nrt < prob_varenicline ~ \"combo_nrt\",\n           prob_varenicline < prob_patch & prob_varenicline < prob_combo_nrt ~ \"varenicline\",\n           TRUE ~ NA_character_),\n         tx_second = case_when(\n           tx_worst == \"patch\" & tx_best == \"varenicline\" ~ \"combo_nrt\",\n           tx_worst == \"patch\" & tx_best == \"combo_nrt\" ~ \"varenicline\",\n           tx_worst == \"varenicline\" & tx_best == \"patch\" ~ \"combo_nrt\",\n           tx_worst == \"varenicline\" & tx_best == \"combo_nrt\" ~ \"patch\",\n           tx_worst == \"combo_nrt\" & tx_best == \"varenicline\" ~ \"patch\",\n           tx_worst == \"combo_nrt\" & tx_best == \"patch\" ~ \"varenicline\",\n           TRUE ~ NA_character_)) |> \n  mutate(tx_rank = case_when(\n    tx_rct == tx_best ~ \"first\",\n    tx_rct == tx_second ~ \"second\",\n    tx_rct == tx_worst ~ \"third\",\n    TRUE ~ NA_character_)) |> \n  select(subid, starts_with(\"tx_\"), starts_with(\"prob_\"),\n         outcome_rct_wk4_num, outcome_rct_wk12_num, outcome_rct_wk26_num) |> \n  pivot_longer(\n    cols = c(outcome_rct_wk4_num, outcome_rct_wk12_num, outcome_rct_wk26_num),\n    names_to = \"week\",\n    names_pattern = \"(?<=outcome_rct_wk)(.+)(?=_num)\",\n    values_to = \"outcome_rct_num\"\n  ) |> \n  mutate(c_tx_match = if_else(tx_match == TRUE, 0.5, -0.5), # center\n         week = as.numeric(week)) |> \n  # log transformation\n  mutate(week_log_2 = log(week, base = 2)) |> \n  # week 4-centered log transformation\n  mutate(c4_week_log_2 = week_log_2 - log(4, base = 2))\n\nglimpse(d)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 3,258\nColumns: 16\n$ subid            <dbl> 20010, 20010, 20010, 20015, 20015, 20015, 20030, 2003…\n$ tx_rct           <chr> \"patch\", \"patch\", \"patch\", \"combo_nrt\", \"combo_nrt\", …\n$ tx_best          <chr> \"varenicline\", \"varenicline\", \"varenicline\", \"varenic…\n$ tx_match         <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALS…\n$ tx_worst         <chr> \"combo_nrt\", \"combo_nrt\", \"combo_nrt\", \"patch\", \"patc…\n$ tx_second        <chr> \"patch\", \"patch\", \"patch\", \"combo_nrt\", \"combo_nrt\", …\n$ tx_rank          <chr> \"second\", \"second\", \"second\", \"second\", \"second\", \"se…\n$ prob_best        <dbl> 0.2646638, 0.2646638, 0.2646638, 0.4846121, 0.4846121…\n$ prob_patch       <dbl> 0.2007715, 0.2007715, 0.2007715, 0.4175508, 0.4175508…\n$ prob_combo_nrt   <dbl> 0.1845281, 0.1845281, 0.1845281, 0.4643572, 0.4643572…\n$ prob_varenicline <dbl> 0.2646638, 0.2646638, 0.2646638, 0.4846121, 0.4846121…\n$ week             <dbl> 4, 12, 26, 4, 12, 26, 4, 12, 26, 4, 12, 26, 4, 12, 26…\n$ outcome_rct_num  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0,…\n$ c_tx_match       <dbl> -0.5, -0.5, -0.5, -0.5, -0.5, -0.5, -0.5, -0.5, -0.5,…\n$ week_log_2       <dbl> 2.000000, 3.584963, 4.700440, 2.000000, 3.584963, 4.7…\n$ c4_week_log_2    <dbl> 0.000000, 1.584963, 2.700440, 0.000000, 1.584963, 2.7…\n```\n\n\n:::\n:::\n\n\n## Analyses\n\n### Primary model\n\n*NOTE*: differs from preregistration (base 2 instead of base e)\n\n4-week-centered, log-transformed week (base 2)\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nif(file.exists(file.path(path_models, \n                         str_c(\"model_clin_benefit_\", version, \".rds\")))){\n  message(str_c(\"Model already exists for version \", \n                version, \". Reading in existing model\"))\n  \n  model_bayes <- read_rds(file.path(path_models, \n                                    str_c(\"model_clin_benefit_\", version, \".rds\")))\n  \n} else {\n  message(\"Fitting new model & saving out\")\n  model_bayes <- blme::bglmer(outcome_rct_num ~ c_tx_match * c4_week_log_2 + \n                                (1 + c4_week_log_2 | subid),\n                              data = d,\n                              family = binomial(link = \"logit\"),\n                              control = glmerControl(optCtrl = list(maxfun = 3e6)))\n  \n  model_bayes |> \n    write_rds(file.path(path_models, \n                        str_c(\"model_clin_benefit_\", version, \".rds\")))\n}\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nModel already exists for version v5. Reading in existing model\n```\n\n\n:::\n:::\n\n\nEvaluate model\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nsummary(model_bayes)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCov prior  : subid ~ wishart(df = 4.5, scale = Inf, posterior.scale = cov, common.scale = TRUE)\nPrior dev  : -1.5157\n\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [bglmerMod]\n Family: binomial  ( logit )\nFormula: outcome_rct_num ~ c_tx_match * c4_week_log_2 + (1 + c4_week_log_2 |  \n    subid)\n   Data: d\nControl: glmerControl(optCtrl = list(maxfun = 3e+06))\n\n     AIC      BIC   logLik deviance df.resid \n  3045.9   3088.6  -1516.0   3031.9     3251 \n\nScaled residuals: \n     Min       1Q   Median       3Q      Max \n-1.60825 -0.32784 -0.06676  0.17412  1.59916 \n\nRandom effects:\n Groups Name          Variance Std.Dev. Corr\n subid  (Intercept)   3.977    1.994        \n        c4_week_log_2 5.848    2.418    0.94\nNumber of obs: 3258, groups:  subid, 1086\n\nFixed effects:\n                         Estimate Std. Error z value Pr(>|z|)    \n(Intercept)              -1.05563    0.16229  -6.505 7.79e-11 ***\nc_tx_match                1.46351    0.25949   5.640 1.70e-08 ***\nc4_week_log_2            -1.52052    0.15285  -9.948  < 2e-16 ***\nc_tx_match:c4_week_log_2 -0.04555    0.21204  -0.215     0.83    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) c_tx_m c4___2\nc_tx_match  -0.301              \nc4_wek_lg_2 -0.142  0.216       \nc_tx_:4___2  0.247  0.000 -0.009\n```\n\n\n:::\n:::\n\n\n### Follow-up analyses: Simple Effects\n\nFrom preregistration: If the interaction between `tx_match` and `week` is significant (*p* < 0.05), we will conduct follow-up analyses to test the simple effect of `tx_match` at each time point.\n\nInteraction between `tx_match` and `week` was not significant (*p* = 0.83), so no follow-up analyses of simple effects are needed.\n\n## Figure\n\n\n::: {#cell-fig-clin-ben-wk4 .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-clin-ben-wk4\nd |> \n  mutate(week_cat = factor(week,\n                           levels = c(4, 12, 26),\n                           labels = c(\"Week 4\", \"Week 12\", \"Week 26\")),\n         tx_match = factor(tx_match, \n                           levels = c(TRUE, FALSE),\n                           labels = c(\"Matched to Best\", \"Unmatched\"))) |> \n  group_by(week_cat, tx_match) |> \n  summarize(mean_outcome = mean(outcome_rct_num)) |> \n  ggplot(aes(x = week_cat, y = mean_outcome, fill = tx_match)) +\n  geom_col(position = \"dodge\") +\n  labs(\n    x = \"Week On-Study\",\n    y = \"Mean Abstinence Rate\",\n    fill = \"Treatment Matching\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`summarise()` has grouped output by 'week_cat'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](eval_benefit_4wk_files/figure-html/fig-clin-ben-wk4-1.png){#fig-clin-ben-wk4 width=672}\n:::\n:::\n",
    "supporting": [
      "eval_benefit_4wk_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}